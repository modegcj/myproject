canvas使用（MDN文档）：
1.获取canvas上下文类型：
obj.getContext(contextType,contextAttributes);
• 上下文类型(contextType)：
    。2d：代表一个二维渲染上下文
    。webgl(或“experimental-webgl”)：代表一个三维渲染上下文
    。webgl2(或“experimental-webgl2”)：代表一个三维渲染上下文；这种情况下只能在浏览器中实现WebGL版本2


Canvas创建路径的属性和方法：
.beginPath()    起始一条路径，或重置当前路径
.fillStyle  填充颜色
.fill()  填充路径
.strokeStyle    描边颜色
.stroke()   描边
.arc(圆心x坐标,圆心y坐标,圆的半径,起始角（以弧度计，弧的圆形的三点钟位置是0°）,结束角,绘图方向为逆时针还是顺时针（可选，False=顺时针）)  创建圆弧
.rect() 创建矩形
.fillRect(x,y,width,height) 绘制一个实心矩形
.strokeRect(x,y,width,height)   绘制一个空心矩形
.clearRect()    在给定的矩形内清除指定的像素
.arcTo()    创建两切线之间的弧/曲线
.moveTo(x,y)   把路径移动到画布中的指定点，不创建线条
.lineTo(x,y)   添加一个新点，然后在画布中创建从该点到最后指定点的线条
.lineCap    设置或返回线条的结束端点样式 (butt：默认，平直边缘；round：每个末端添加原形线帽；square：每个末端添加正方形线帽)
.lineJoin   设置或返回两条线相交时，所创建的拐角类型（bevel：创建斜角；round：创建圆角；miter：默认，创建尖角）
.lineWidth  设置或返回当前的线条宽度
.miterLimit 设置或返回最大斜接长度
.closePath()    创建从当前点回到起始点的路径
.quadraticCurveTo() 创建二次方贝塞尔曲线
.bezierCurveTo()    创建三次方贝塞尔曲线
.isPointInPath()    如果指定的点位于当前路径中，则返回true，否则返回false


Canvas设置阴影：
.shadowColor    设置或返回用于阴影的颜色
.shadowBlur    设置或返回用于阴影的模糊级别
.shadowOffsetX  设置或返回阴影距形状的水平距离
.shadowOffsetY  设置或返回阴影距形状的垂直距离


Canvas设置渐变：
.createLinearGradient(开始渐变的x坐标,开始渐变的y坐标,结束渐变的x坐标,结束渐变的y坐标)  创建线性渐变（用在画布内容上）
.createPattern()    在指定的方向上重复指定的元素
.createRadialGradient() 创建放射状/环形的渐变（用在画布内容上）
.addColorStop(stop,color) 规定渐变对象中的颜色和停止位置
    • stop：介于0.0与1.0之间的值，表示渐变中开始于结束之间的位置
    • color：在结束位置显示的CSS颜色值


图形转换：
.scale()    缩放当前绘图至更大或更小
.rotate()   旋转当前绘图
.translate()    重新映射画布上的(0,0)位置
.transform()    替换绘图的当前转换矩阵
.setTransform() 将当前转换配置重置为单位矩阵，然后运行transform()


图像绘制：
drawImage(img,sx,sy,swidth,sheight,x,y,width,height) 向画布上绘制图像、画布或视频
    • img：规定要使用的图像、画布或视频
    • sx：可选。开始剪切的x坐标位置
    • sy：可选。开始剪切的y坐标位置
    • swidth：可选。被剪切图像的宽度
    • sheight: 可选。被剪切图像的高度
    • x：在画布上放置图像的x坐标位置
    • y：在画布上放置图像的y坐标位置
    • width：可选。要使用的图像的宽度（伸展或缩小图像）
    • height：可选。要使用的图像的高度（伸展或缩小图像）


